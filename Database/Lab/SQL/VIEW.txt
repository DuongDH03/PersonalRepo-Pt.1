--2 

CREATE OR REPLACE VIEW STUDENT_CLASS_SHORTINFOS AS
SELECT STUDENT_ID,
	FIRST_NAME,
	LAST_NAME,
	GENDER,
	CLAZZ."name"
FROM STUDENT
JOIN CLAZZ USING (CLAZZ_ID);

CREATE OR REPLACE FUNCTION FNC_UPDATE() RETURNS TRIGGER AS 
$$
begin
	--update student
	UPDATE STUDENT SET STUDENT_ID =NEW.STUDENT_ID ,
						FIRST_NAME = NEW.FIRST_NAME,
						LAST_NAME= NEW.LAST_NAME
	WHERE STUDENT_ID = OLD.STUDENT_ID;
	RETURN NEW;
end;
$$ 
LANGUAGE PLPGSQL;

CREATE TRIGGER UPDATE_STUDENT_VIEW INSTEAD OF
UPDATE ON STUDENT_CLASS_SHORTINFOS
FOR EACH ROW EXECUTE PROCEDURE FNC_UPDATE();


UPDATE STUDENT_CLASS_SHORTINFOS
SET LAST_NAME = 'Dinh'
WHERE STUDENT_ID = '2016001';

--3

CREATE VIEW CLASS_INFOS AS
SELECT CLAZZ_ID,
	CLAZZ."name",
	COUNT(DISTINCT STUDENT."student_id") AS STUD_NUM
FROM CLAZZ
JOIN STUDENT USING (CLAZZ_ID)
GROUP BY CLAZZ_ID


SELECT *
FROM CLASS_INFOS;

UPDATE CLASS_INFOS
SET NAME = 'CNTT1.01-K63'
WHERE CLAZZ_ID = '20162101';

--4
DROP VIEW BEST_CPA;


CREATE VIEW BEST_CPA AS
	(WITH A AS
			(SELECT STUDENT_ID,
					SUBJECT_ID,
					CREDIT,
					E.MIDTERM_SCORE * (100 - S.PERCENTAGE_FINAL_EXAM) / 100 + E.FINAL_SCORE * S.PERCENTAGE_FINAL_EXAM / 100 AS SUBJECT_SCORE
				FROM STUDENT
				JOIN ENROLLMENT E USING (STUDENT_ID)
				JOIN SUBJECT S USING (SUBJECT_ID)) 
	SELECT STUDENT_ID,
			FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME,
			SUM(CREDIT * SUBJECT_SCORE) / SUM(CREDIT) AS CPA
	FROM A
	JOIN STUDENT USING (STUDENT_ID)
	GROUP BY STUDENT_ID,
			FULL_NAME
	HAVING sum(CREDIT * SUBJECT_SCORE) / SUM(CREDIT) > 3.2
	ORDER BY CPA desc);